{"version":3,"sources":["../src/notification_popover_controller.js"],"names":["define","$","Ajax","Templates","Str","URL","DebugNotification","CustomEvents","PopoverController","NotificationRepo","NotificationAreaEvents","NotificationController","SELECTORS","MARK_ALL_READ_BUTTON","ALL_NOTIFICATIONS_CONTAINER","NOTIFICATION","UNREAD_NOTIFICATION","NOTIFICATION_LINK","EMPTY_MESSAGE","COUNT_CONTAINER","NotificationPopoverController","element","call","markAllReadButton","root","find","unreadCount","lastQueried","userId","attr","container","limit","offset","loadedAll","initialLoad","html","prototype","Object","create","constructor","renderUnreadCount","document","text","removeClass","addClass","hideUnreadCount","getNotificationElement","id","length","renderNotifications","notifications","promises","each","index","notification","getOffset","viewmoreurl","relativeUrl","notificationurlparams","contexturl","promise","render","then","js","push","bind","when","apply","arguments","argument","append","runTemplateJS","markAllAsRead","request","useridto","timecreatedto","always","registerEventListeners","events","activate","on","e","data","stopPropagation","originalEvent","preventDefault","target","closest","hasClass","menuOpened","updateButtonAriaLabel","hasDoneInitialLoad","loadMoreNotifications","menuClosed","startLoading","getContent","stopLoading","getContentContainer","scrollBottom","isLoading","hasLoadedAllContent","scrollLock","notificationShown","read"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Controls the notification popover in the nav bar.\n *\n * See template: local_mails/notification_popover\n *\n * @module     local_mails/notification_popover_controller\n * @class      notification_popover_controller\n * @package    local_mails\n * @copyright  2020 Harshil Patel <harshil8595@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/ajax', 'core/templates', 'core/str', 'core/url',\n            'core/notification', 'core/custom_interaction_events', 'core/popover_region_controller',\n            'local_mails/notification_repository', 'local_mails/notification_area_events',\n            'message_popup/notification_popover_controller'],\n        function($, Ajax, Templates, Str, URL, DebugNotification, CustomEvents,\n            PopoverController, NotificationRepo, NotificationAreaEvents, NotificationController) {\n\n    var SELECTORS = {\n        MARK_ALL_READ_BUTTON: '[data-action=\"mails-mark-all-read\"]',\n        ALL_NOTIFICATIONS_CONTAINER: '[data-region=\"mails-all-notifications\"]',\n        NOTIFICATION: '[data-region=\"mails-content-item-container\"]',\n        UNREAD_NOTIFICATION: '[data-region=\"mails-content-item-container\"].unread',\n        NOTIFICATION_LINK: '[data-action=\"mails-content-item-link\"]',\n        EMPTY_MESSAGE: '[data-region=\"mails-empty-message\"]',\n        COUNT_CONTAINER: '[data-region=\"mails-count-container\"]',\n    };\n\n    /**\n     * Constructor for the NotificationPopoverController.\n     * Extends PopoverRegionController.\n     *\n     * @param {object} element jQuery object root element of the popover\n     */\n    var NotificationPopoverController = function(element) {\n        // Initialise base class.\n        PopoverController.call(this, element);\n\n        this.markAllReadButton = this.root.find(SELECTORS.MARK_ALL_READ_BUTTON);\n        this.unreadCount = 0;\n        this.lastQueried = 0;\n        this.userId = this.root.attr('data-userid');\n        this.container = this.root.find(SELECTORS.ALL_NOTIFICATIONS_CONTAINER);\n        this.limit = 20;\n        this.offset = 0;\n        this.loadedAll = false;\n        this.initialLoad = false;\n\n        // Let's find out how many unread notifications there are.\n        this.unreadCount = this.root.find(SELECTORS.COUNT_CONTAINER).html();\n    };\n\n    /**\n     * Clone the parent prototype.\n     */\n    NotificationPopoverController.prototype = Object.create(NotificationController.prototype);\n\n    /**\n     * Make sure the constructor is set correctly.\n     */\n    NotificationPopoverController.prototype.constructor = NotificationPopoverController;\n\n    /**\n     * Show the unread notification count badge on the menu toggle if there\n     * are unread notifications, otherwise hide it.\n     *\n     * @method renderUnreadCount\n     */\n    NotificationPopoverController.prototype.renderUnreadCount = function() {\n        var element = $(document).find(SELECTORS.COUNT_CONTAINER);\n\n        if (this.unreadCount && this.unreadCount > 0) {\n            element.text(this.unreadCount);\n            element.removeClass('hidden');\n        } else {\n            element.addClass('hidden');\n        }\n    };\n\n    /**\n     * Hide the unread notification count badge on the menu toggle.\n     *\n     * @method hideUnreadCount\n     */\n    NotificationPopoverController.prototype.hideUnreadCount = function() {\n        this.root.find(SELECTORS.COUNT_CONTAINER).addClass('hidden');\n    };\n\n    /**\n     * Find the notification element for the given id.\n     *\n     * @param {int} id\n     * @method getNotificationElement\n     * @return {object|null} The notification element\n     */\n    NotificationPopoverController.prototype.getNotificationElement = function(id) {\n        var element = this.root.find(SELECTORS.NOTIFICATION + '[data-id=\"' + id + '\"]');\n        return element.length == 1 ? element : null;\n    };\n\n    /**\n     * Render the notification data with the appropriate template and add it to the DOM.\n     *\n     * @method renderNotifications\n     * @param {array} notifications Notification data\n     * @param {object} container jQuery object the container to append the rendered notifications\n     * @return {object} jQuery promise that is resolved when all notifications have been\n     *                  rendered and added to the DOM\n     */\n    NotificationPopoverController.prototype.renderNotifications = function(notifications, container) {\n        var promises = [];\n\n        $.each(notifications, function(index, notification) {\n            // Determine what the offset was when loading this notification.\n            var offset = this.getOffset() - this.limit;\n            // Update the view more url to contain the offset to allow the notifications\n            // page to load to the correct position in the list of notifications.\n            notification.viewmoreurl = URL.relativeUrl('/local/mails/index.php', {\n                id: notification.id,\n                offset: offset,\n            });\n\n            // Link to mark read page before loading the actual link.\n            var notificationurlparams = {\n                id: notification.id\n            };\n\n            notification.contexturl = URL.relativeUrl('/local/mails/mark_mail_read.php', notificationurlparams);\n\n            var promise = Templates.render('local_mails/notification_content_item', notification)\n            .then(function(html, js) {\n                return {html: html, js: js};\n            });\n            promises.push(promise);\n        }.bind(this));\n\n        return $.when.apply($, promises).then(function() {\n            // Each of the promises in the when will pass its results as an argument to the function.\n            // The order of the arguments will be the order that the promises are passed to when()\n            // i.e. the first promise's results will be in the first argument.\n            $.each(arguments, function(index, argument) {\n                container.append(argument.html);\n                Templates.runTemplateJS(argument.js);\n            });\n            return;\n        });\n    };\n\n    /**\n     * Send a request to the server to mark all unread notifications as read and update\n     * the unread count and unread notification elements appropriately.\n     *\n     * @return {Promise}\n     * @method markAllAsRead\n     */\n    NotificationPopoverController.prototype.markAllAsRead = function() {\n        this.markAllReadButton.addClass('loading');\n\n        var request = {\n            useridto: this.userId,\n            timecreatedto: this.lastQueried,\n        };\n\n        return NotificationRepo.markAllAsRead(request)\n            .then(function() {\n                this.unreadCount = 0;\n                this.root.find(SELECTORS.UNREAD_NOTIFICATION).removeClass('unread');\n            }.bind(this))\n            .always(function() {\n                this.markAllReadButton.removeClass('loading');\n            }.bind(this));\n    };\n\n    /**\n     * Add all of the required event listeners for this notification popover.\n     *\n     * @method registerEventListeners\n     */\n    NotificationPopoverController.prototype.registerEventListeners = function() {\n        CustomEvents.define(this.root, [\n            CustomEvents.events.activate,\n        ]);\n\n        // Mark all notifications read if the user activates the mark all as read button.\n        this.root.on(CustomEvents.events.activate, SELECTORS.MARK_ALL_READ_BUTTON, function(e, data) {\n            this.markAllAsRead();\n            e.stopPropagation();\n            data.originalEvent.preventDefault();\n        }.bind(this));\n\n        // Mark individual notification read if the user activates it.\n        this.root.on(CustomEvents.events.activate, SELECTORS.NOTIFICATION_LINK, function(e) {\n            var element = $(e.target).closest(SELECTORS.NOTIFICATION);\n\n            if (element.hasClass('unread')) {\n                this.unreadCount--;\n                element.removeClass('unread');\n            }\n\n            e.stopPropagation();\n        }.bind(this));\n\n        // Update the notification information when the menu is opened.\n        this.root.on(this.events().menuOpened, function() {\n            this.hideUnreadCount();\n            this.updateButtonAriaLabel();\n\n            if (!this.hasDoneInitialLoad()) {\n                this.loadMoreNotifications();\n            }\n        }.bind(this));\n\n        // Update the unread notification count when the menu is closed.\n        this.root.on(this.events().menuClosed, function() {\n            this.renderUnreadCount();\n            this.updateButtonAriaLabel();\n        }.bind(this));\n\n        // Set aria attributes when popover is loading.\n        this.root.on(this.events().startLoading, function() {\n            this.getContent().attr('aria-busy', 'true');\n        }.bind(this));\n\n        // Set aria attributes when popover is finished loading.\n        this.root.on(this.events().stopLoading, function() {\n            this.getContent().attr('aria-busy', 'false');\n        }.bind(this));\n\n        // Load more notifications if the user has scrolled to the end of content\n        // item list.\n        this.getContentContainer().on(CustomEvents.events.scrollBottom, function() {\n            if (!this.isLoading && !this.hasLoadedAllContent()) {\n                this.loadMoreNotifications();\n            }\n        }.bind(this));\n\n        // Stop mouse scroll from propagating to the window element and\n        // scrolling the page.\n        CustomEvents.define(this.getContentContainer(), [\n            CustomEvents.events.scrollLock\n        ]);\n\n        // Listen for when a notification is shown in the notifications page and mark\n        // it as read, if it's unread.\n        $(document).on(NotificationAreaEvents.notificationShown, function(e, notification) {\n            if (!notification.read) {\n                var element = this.getNotificationElement(notification.id);\n\n                if (element) {\n                    element.removeClass('unread');\n                }\n\n                this.unreadCount--;\n                this.renderUnreadCount();\n            }\n        }.bind(this));\n    };\n\n    return NotificationPopoverController;\n});\n"],"file":"notification_popover_controller.min.js"}