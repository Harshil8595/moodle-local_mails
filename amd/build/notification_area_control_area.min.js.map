{"version":3,"sources":["../src/notification_area_control_area.js"],"names":["define","$","Templates","DebugNotification","CustomEvents","NotificationRepo","NotificationAreaEvents","NotificationControlArea","SELECTORS","CONTAINER","CONTENT","NOTIFICATION","CAN_RECEIVE_FOCUS","TYPE","COUNT_CONTAINER","TEMPLATES","ControlArea","root","userId","container","closest","content","find","offset","limit","initialLoad","isLoading","loadedAll","notifications","type","data","registerEventListeners","prototype","Object","create","constructor","getNotificationElement","id","element","getRoot","length","showNotification","notificationElement","removeClass","addClass","focus","attr","notification","getCacheNotification","scrollNotificationIntoView","getContainer","trigger","extend","markNotificationAsRead","markAsRead","done","remove","renderNotifications","promises","getContent","each","index","contextUrl","contexturl","promise","render","then","html","js","setCacheNotification","bind","push","when","apply","arguments","argument","append","runTemplateJS","loadMoreNotifications","hasLoadedAllContent","Deferred","resolve","startLoading","request","getLimit","getOffset","useridto","getUserId","getType","query","result","unreadCount","unreadcount","setLoadedAllContent","incrementOffset","always","stopLoading","events","activate","scrollBottom","scrollLock","up","down","on","e","tab","target","setOffset","setType","parseInt","clearNotifications","empty","parent","prev","originalEvent","preventDefault","next","is","notificationShown","read","cachedNotification","value"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Controls the notification area on the notification page.\n *\n * @module     local_mails/notification_area_control_area\n * @class      notification_area_control_area\n * @package    message\n * @copyright  2020 Harshil Patel <harshil8595@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/templates', 'core/notification', 'core/custom_interaction_events',\n        'local_mails/notification_repository', 'local_mails/notification_area_events',\n        'message_popup/notification_area_control_area'],\n    function ($, Templates, DebugNotification, CustomEvents, NotificationRepo, NotificationAreaEvents, NotificationControlArea) {\n\n        var SELECTORS = {\n            CONTAINER: '[data-region=\"mails-area\"]',\n            CONTENT: '[data-region=\"content\"]',\n            NOTIFICATION: '[data-region=\"mails-content-item-container\"]',\n            CAN_RECEIVE_FOCUS: 'input:not([type=\"hidden\"]), a[href], button, textarea, select, [tabindex]',\n            TYPE: '[data-type]',\n            COUNT_CONTAINER: '[data-region=\"mails-count-container\"]',\n        };\n\n        var TEMPLATES = {\n            NOTIFICATION: 'local_mails/notification_content_item',\n        };\n\n        /**\n         * Constructor for ControlArea\n         *\n         * @param {object} root The root element for the content area\n         * @param {int} userId The user id of the current user\n         */\n        var ControlArea = function (root, userId) {\n            this.root = $(root);\n            this.container = this.root.closest(SELECTORS.CONTAINER);\n            this.userId = userId;\n            this.content = this.root.find(SELECTORS.CONTENT);\n            this.offset = 0;\n            this.limit = 20;\n            this.initialLoad = false;\n            this.isLoading = false;\n            this.loadedAll = false;\n            this.notifications = {};\n            this.type = this.container.data('type');\n\n            this.registerEventListeners();\n        };\n\n        /**\n         * Clone the parent prototype.\n         */\n        ControlArea.prototype = Object.create(NotificationControlArea.prototype);\n\n        /**\n         * Make sure the constructor is set correctly.\n         */\n        ControlArea.prototype.constructor = ControlArea;\n\n        /**\n         * Find the notification element in the control area for the given id.\n         *\n         * @method getNotificationElement\n         * @param {int} id The notification id\n         * @return {(object|null)} jQuery element or null\n         */\n        ControlArea.prototype.getNotificationElement = function (id) {\n            var element = this.getRoot().find(SELECTORS.NOTIFICATION + '[data-id=\"' + id + '\"]');\n            return element.length == 1 ? element : null;\n        };\n\n        /**\n         * Show the full notification for the given notification element. The notification\n         * context is retrieved from the cache and send as data with an event to be\n         * rendered in the content area.\n         *\n         * @method showNotification\n         * @param {(int|object)} notificationElement The notification id or jQuery notification element\n         */\n        ControlArea.prototype.showNotification = function (notificationElement) {\n            if (typeof notificationElement !== 'object') {\n                // Assume it's an ID if it's not an object.\n                notificationElement = this.getNotificationElement(notificationElement);\n            }\n\n            if (notificationElement && notificationElement.length) {\n                this.getRoot().find(SELECTORS.NOTIFICATION).removeClass('selected');\n                notificationElement.addClass('selected').find(SELECTORS.CAN_RECEIVE_FOCUS).focus();\n                var id = notificationElement.attr('data-id');\n                var notification = this.getCacheNotification(id);\n                this.scrollNotificationIntoView(notificationElement);\n                // Create a new version of the notification to send with the notification so\n                // this copy isn't modified.\n                this.getContainer().trigger(NotificationAreaEvents.showNotification, [$.extend({}, notification)]);\n            }\n        };\n\n        /**\n         * Send a request to mark the notification as read in the server and remove the unread\n         * status from the element.\n         *\n         * @method markNotificationAsRead\n         * @param {object} notificationElement The jQuery notification element\n         * @return {object} jQuery promise\n         */\n        ControlArea.prototype.markNotificationAsRead = function (notificationElement) {\n            return NotificationRepo.markAsRead(notificationElement.attr('data-id')).done(function () {\n                notificationElement.removeClass('unread');\n                notificationElement.find('.unread').remove();\n            });\n        };\n\n\n        /**\n         * Render the notification data with the appropriate template and add it to the DOM.\n         *\n         * @method renderNotifications\n         * @param {array} notifications Array of notification data\n         * @return {object} jQuery promise that is resolved when all notifications have been\n         *                  rendered and added to the DOM\n         */\n        ControlArea.prototype.renderNotifications = function (notifications) {\n            var promises = [];\n            var container = this.getContent();\n\n            $.each(notifications, function (index, notification) {\n                // Need to remove the contexturl so the item isn't rendered\n                // as a link.\n                var contextUrl = notification.contexturl;\n                delete notification.contexturl;\n                var promise = Templates.render(TEMPLATES.NOTIFICATION, notification)\n                    .then(function (html, js) {\n                        // Restore it for the cache.\n                        notification.contexturl = contextUrl;\n                        this.setCacheNotification(notification);\n                        // Pass the Rendered content out.\n                        return {html: html, js: js};\n                    }.bind(this));\n                promises.push(promise);\n            }.bind(this));\n\n            return $.when.apply($, promises).then(function () {\n                // Each of the promises in the when will pass its results as an argument to the function.\n                // The order of the arguments will be the order that the promises are passed to when()\n                // i.e. the first promise's results will be in the first argument.\n                $.each(arguments, function (index, argument) {\n                    container.append(argument.html);\n                    Templates.runTemplateJS(argument.js);\n                });\n                return;\n            });\n        };\n\n        /**\n         * Load notifications from the server and render them.\n         *\n         * @method loadMoreNotifications\n         * @return {object} jQuery promise\n         */\n        ControlArea.prototype.loadMoreNotifications = function () {\n            if (this.isLoading || this.hasLoadedAllContent()) {\n                return $.Deferred().resolve();\n            }\n\n            this.startLoading();\n            var request = {\n                limit: this.getLimit(),\n                offset: this.getOffset(),\n                useridto: this.getUserId(),\n                type: this.getType()\n            };\n\n            if (!this.initialLoad) {\n                // If this is the first load we may have been given a non-zero offset,\n                // in which case we need to load all notifications preceeding that offset\n                // to make sure the full list is rendered.\n                request.limit = this.getOffset() + this.getLimit();\n                request.offset = 0;\n            }\n\n            var promise = NotificationRepo.query(request).then(function (result) {\n                var notifications = result.notifications;\n                this.unreadCount = result.unreadcount;\n                this.setLoadedAllContent(!notifications.length || notifications.length < this.getLimit());\n                this.initialLoad = true;\n\n                if (notifications.length) {\n                    this.incrementOffset();\n                    return this.renderNotifications(notifications);\n                }\n\n                return false;\n            }.bind(this))\n                .always(function () {\n                    this.stopLoading();\n                }.bind(this));\n\n            return promise;\n        };\n\n        /**\n         * Create the event listeners for the control area.\n         *\n         * @method registerEventListeners\n         */\n        ControlArea.prototype.registerEventListeners = function () {\n            CustomEvents.define(this.getRoot(), [\n                CustomEvents.events.activate,\n                CustomEvents.events.scrollBottom,\n                CustomEvents.events.scrollLock,\n                CustomEvents.events.up,\n                CustomEvents.events.down,\n            ]);\n            CustomEvents.define(this.getContent(), [\n                CustomEvents.events.scrollBottom,\n            ]);\n\n            this.getRoot().on(CustomEvents.events.scrollBottom, function () {\n                this.loadMoreNotifications();\n            }.bind(this));\n\n            this.getRoot().on(CustomEvents.events.activate, SELECTORS.TYPE, function (e) {\n                var tab = $(e.target);\n                this.setOffset(0);\n                this.setLoadedAllContent(false);\n                this.setType(parseInt(tab.data('type')));\n                this.getContainer().trigger(NotificationAreaEvents.clearNotifications);\n                this.getContent().empty();\n                this.loadMoreNotifications();\n                tab.parent().find(SELECTORS.TYPE).removeClass('active');\n                tab.addClass('active');\n            }.bind(this));\n\n            this.getRoot().on(CustomEvents.events.activate, SELECTORS.NOTIFICATION, function (e) {\n                var notificationElement = $(e.target).closest(SELECTORS.NOTIFICATION);\n                this.showNotification(notificationElement);\n            }.bind(this));\n\n            // Show the previous notification in the list.\n            this.getRoot().on(CustomEvents.events.up, SELECTORS.NOTIFICATION, function (e, data) {\n                var notificationElement = $(e.target).closest(SELECTORS.NOTIFICATION);\n                this.showNotification(notificationElement.prev());\n\n                data.originalEvent.preventDefault();\n            }.bind(this));\n\n            // Show the next notification in the list.\n            this.getRoot().on(CustomEvents.events.down, SELECTORS.NOTIFICATION, function (e, data) {\n                var notificationElement = $(e.target).closest(SELECTORS.NOTIFICATION);\n                this.showNotification(notificationElement.next());\n                if (notificationElement.next().is(':last-child')) {\n                    this.loadMoreNotifications();\n                }\n\n                data.originalEvent.preventDefault();\n            }.bind(this));\n\n            this.getContainer().on(NotificationAreaEvents.notificationShown, function (e, notification) {\n                if (!notification.read) {\n                    var element = this.getNotificationElement(notification.id);\n\n                    if (element) {\n                        this.markNotificationAsRead(element);\n                    }\n\n                    var cachedNotification = this.getCacheNotification(notification.id);\n\n                    if (cachedNotification) {\n                        cachedNotification.read = true;\n                    }\n                }\n            }.bind(this));\n        };\n\n        /**\n         * Get the type value\n         * notifications.\n         *\n         * @method getType\n         * @return {int}\n         */\n        ControlArea.prototype.getType = function () {\n            return this.type;\n        };\n\n        /**\n         * Set the type value\n         * notifications.\n         *\n         * @method setType\n         * @param {int} value The new type value\n         */\n        ControlArea.prototype.setType = function (value) {\n            this.type = value;\n        };\n\n        return ControlArea;\n    });\n"],"file":"notification_area_control_area.min.js"}